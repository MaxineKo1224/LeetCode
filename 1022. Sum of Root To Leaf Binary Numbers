https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers/
//이진트리 문제는 정말 재미있고 좋아하는 문제다.(물론 잘하진 못한다;)
//근데 이 문제는 또 재귀함수 문제이기도 하다.
//재귀함수...내가 싫어하는 재귀함수...근데 그냥 재귀함수도 아니고 + 있는 재귀함수임...ㅂㄷㅂㄷ....헷갈려...

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
class Solution {
public:
    int sumRootToLeaf(TreeNode* root, int val = 0){
        if(!root) return 0;
        val = (val*2 + root->val);
        return root->left == root->right ? val : sumRootToLeaf(root->left, val) + sumRootToLeaf(root->right, val);
    }
};
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



맨 처음, val이 0*2 + 1 에 의해서 1이 된다.
root->left == root->right 이걸 만족하지 않기 때문에 
sumRootToLeaf(0,1) + sumRootToLeaf(1,1) 재귀된다.
-> 1*2+0 = 2          -> 1*2+1 = 3  
(루트의 왼쪽부분)      (루트의 오른쪽부분)

sumRootToLeaf(0,1) 이거에 의해서 
sumRootToLeaf(0,2) + sumRootToLeaf(1,2) 재귀된다.  
-> 2*2+0 = 4         ->2*2+1 = 5 

sumRootToLeaf(1,1) 이거에 의해서
sumRootToLeaf(0,3) + sumRootToLeaf(1,3) 재귀된다.  
-> 3*2+0=6           ->3*2+1=7


??...??...


